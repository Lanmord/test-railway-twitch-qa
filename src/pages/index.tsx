import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { signIn, signOut, useSession } from "next-auth/react";

const QuestionsView = () => {
  const { data, isLoading } = trpc.useQuery(["questions.get-my-questions"]);

  const { mutate: pinQuestion } = trpc.useMutation(["questions.pin-question"]);
  const { mutate: unpinQuestion } = trpc.useMutation([
    "questions.unpin-question",
  ]);

  return (
    <div className="flex flex-col gap-4">
      <button
        onClick={() => unpinQuestion()}
        className="absolute top-0 right-0 m-4"
      >
        Unpin current question
      </button>
      {data?.map((q) => (
        <div
          key={q.id}
          className="p-4 bg-gray-600 rounded flex justify-between"
        >
          {q.body}
          <button onClick={() => pinQuestion({ questionId: q.id })}>Pin</button>
        </div>
      ))}
    </div>
  );
};

const HomeContents = () => {
  const { data, status } = useSession();

  if (status === "loading") return <div>Loading...</div>;

  if (!data)
    return (
      <div>
        <div>Please log in</div>
        <button onClick={() => signIn("twitch")}>Sign in with Twitch</button>
      </div>
    );

  return (
    <div className="flex flex-col p-8">
      Hello {data.user?.name}
      <QuestionsView />
    </div>
  );
};

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Stream Q&A Tool</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <HomeContents />
    </>
  );
};

export default Home;
